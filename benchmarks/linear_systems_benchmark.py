# -*- coding: utf-8 -*-
"""interpolation_benchmark.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gyIF1PDHFPb1HaI1zmvhonzV3E1AXj4t
"""

import zipfile
import os


with zipfile.ZipFile("/content/GPUPy.zip", 'r') as zip_ref:
    zip_ref.extractall("/content/")

os.listdir("/content/")

import sys
sys.path.append("/content")



import numpy as np
import time
import matplotlib.pyplot as plt
import cupyx.scipy.linalg as cpx_linalg
from GPUPy.src.numerical_methods.linear_systems import  solve_linear_system, solve_linear_system_lu
from  GPUPy.src.numerical_methods.utils import choose_backend
sizes = [100, 200, 500, 1000, 2000]  # Matris boyutlarÄ±
cpu_times_direct = []
gpu_times_direct = []
cpu_times_lu = []
gpu_times_lu = []

for n in sizes:
    print(f"\n--- Benchmarking size {n}x{n} ---")
    A = np.random.rand(n, n)
    b = np.random.rand(n)

    # Direct Solver CPU
    start = time.time()
    solve_linear_system(A, b, use_gpu=None)
    elapsed = time.time() - start
    cpu_times_direct.append(time.time() - start)
    print(f"Direct Solver (CPU): {elapsed:.6f} seconds")

    # Direct Solver GPU
    start = time.time()
    solve_linear_system(A, b, use_gpu=True)
    elapsed = time.time() - start
    gpu_times_direct.append(time.time() - start)
    print(f"Direct Solver (GPU): {elapsed:.6f} seconds")

    # LU Solver CPU
    start = time.time()
    solve_linear_system_lu(A, b, use_gpu=None)
    elapsed = time.time() - start
    cpu_times_lu.append(time.time() - start)
    print(f"LU Solver (CPU): {elapsed:.6f} seconds")

    # LU Solver GPU
    start = time.time()
    solve_linear_system_lu(A, b, use_gpu=True)
    elapsed = time.time() - start
    gpu_times_lu.append(time.time() - start)
    print(f"LU Solver (GPU): {elapsed:.6f} seconds")

# === Plotting ===
plt.figure(figsize=(10, 6))

plt.plot(sizes, cpu_times_direct, 'o-', label='Direct Solver (CPU)', color='blue')
plt.plot(sizes, gpu_times_direct, 'o-', label='Direct Solver (GPU)', color='cyan')
plt.plot(sizes, cpu_times_lu, 's-', label='LU Solver (CPU)', color='green')
plt.plot(sizes, gpu_times_lu, 's-', label='LU Solver (GPU)', color='orange')

plt.xlabel('Matrix Size (N x N)')
plt.ylabel('Time (seconds)')
plt.title('CPU vs GPU Linear System Solver Benchmark')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

