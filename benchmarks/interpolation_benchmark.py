# -*- coding: utf-8 -*-
"""interpolation_benchmark.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gyIF1PDHFPb1HaI1zmvhonzV3E1AXj4t
"""
import zipfile
import os

with zipfile.ZipFile("/content/GPUPy.zip", 'r') as zip_ref:
    zip_ref.extractall("/content/")

os.listdir("/content/")

import sys
sys.path.append("/content")

import numpy as np
import time
from GPUPy.src.numerical_methods.interpolation import linear_interpolation, spline_interpolation

def benchmark_interpolation(N=10000, use_gpu=True):
    # Create dataset
    x = np.linspace(0, 100, N)
    y = np.sin(x)
    x_new = np.linspace(0, 100, N * 2)  # Intermediate values for more points

    print(f"\n--- Benchmark for N = {N} points ---")

    # Linear Interpolation - CPU
    start = time.time()
    y_cpu_lin = linear_interpolation(x, y, x_new, use_gpu=False)
    cpu_lin_time = time.time() - start
    print(f"Linear Interpolation (CPU): {cpu_lin_time:.6f} seconds")

    # Linear Interpolation - GPU
    start = time.time()
    y_gpu_lin = gpu_linear_interpolation(x, y, x_new)
    gpu_lin_time = time.time() - start
    print(f"Linear Interpolation (GPU): {gpu_lin_time:.6f} seconds")

    # Spline Interpolation - CPU
    start = time.time()
    y_cpu_spline = spline_interpolation(x, y, x_new, bc_type='natural', use_gpu=False)
    cpu_spline_time = time.time() - start
    print(f"Cubic Spline Interpolation (CPU): {cpu_spline_time:.6f} seconds")

    # Spline Interpolation - GPU
    start = time.time()
    y_gpu_spline = gpu_cubic_spline_interpolation(x, y, x_new)
    gpu_spline_time = time.time() - start
    print(f"Cubic Spline Interpolation (GPU): {gpu_spline_time:.6f} seconds")

if __name__ == "__main__":
    benchmark_interpolation(N=10000, use_gpu=True)

# Generate sample data
x = np.linspace(0, 10, 10000)
y = np.sin(x)
x_new = np.linspace(0, 10, 1000)

# Perform interpolation on GPU
y_interp_gpu = gpu_linear_interpolation(x, y, x_new)

# Bring result back to CPU
y_interp_cpu = cp.asnumpy(y_interp_gpu)

# Plot
plt.plot(x, y, label='Original Data', alpha=0.3)
plt.plot(x_new, y_interp_cpu, 'r--', label='GPU Linear Interpolation')
plt.legend()
plt.grid(True)
plt.title("Linear Interpolation on GPU with ")
plt.show()

