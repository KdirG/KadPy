# -*- coding: utf-8 -*-
"""root_finding_benchmark-1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PpvntERu-gZdBO95RpUecUvjMyl9yurn
"""

import zipfile
import os


with zipfile.ZipFile("/content/GPUPy.zip", 'r') as zip_ref:
    zip_ref.extractall("/content/")


os.listdir("/content/")

import sys
sys.path.append("/content")

import GPUPy
from GPUPy.src.numerical_methods.utils import benchmark
import numpy as np
import cupy as cp
from GPUPy.src.numerical_methods.root_finding import bisection, newton_raphson

def func(x):
    return x**2 - 4

def dfunc(x):
    return 2*x
cpu_time_bisection = GPUPy.benchmark(bisection, func, a=0, b=5, tolerance=1e-6, max_iterations=100, use_gpu=False)


gpu_time_bisection =  GPUPy.benchmark(bisection, func, a=0, b=5, tolerance=1e-6, max_iterations=100, use_gpu=True)

print(f"Bisection CPU Average Time: {cpu_time:.6f} seconds")
print(f"Bisection GPU Average Time: {gpu_time:.6f} seconds")


cpu_time_newton = GPUPy.benchmark(newton_raphson, func, dfunc, x0=5, tol=1e-6, max_iter=100, use_gpu=False)
gpu_time_newton = GPUPy.benchmark(newton_raphson, func, dfunc, x0=5, tol=1e-6, max_iter=100, use_gpu=True)

print(f"Newton-Raphson CPU Average Time: {cpu_time_newton:.6f} seconds")
print(f"Newton-Raphson GPU Average Time: {gpu_time_newton:.6f} seconds")